/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.9.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.example.controller;

import com.example.model.AssignOrdersRequest;
import com.example.model.AssignmentSummaryResponse;
import com.example.model.ErrorResponse;
import com.example.model.PaginatedOrderResponse;
import com.example.model.PaginatedVehicleAssignmentResponse;
import com.example.model.VehicleStatus;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-05-04T15:16:19.844067600+05:30[Asia/Calcutta]", comments = "Generator version: 7.9.0")
@Validated
@Tag(name = "Assignment", description = "Assigning orders to vehicles and viewing assignments")
public interface AssignmentApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /api/v1/assign-orders : Assign ready orders to vehicles
     * Triggers the assignment process for orders that are &#39;ReadyForDispatch&#39;, assigning them to available vehicles based on capacity, proximity (using coordinates), and delivery type prioritization.
     *
     * @param assignOrdersRequest  (optional)
     * @return Assignment process completed successfully. (status code 200)
     *         or Invalid request or unable to assign orders (e.g., no ready orders, no available vehicles). (status code 400)
     *         or Authentication information is missing or invalid. (status code 401)
     */
    @Operation(
        operationId = "assignOrders",
        summary = "Assign ready orders to vehicles",
        description = "Triggers the assignment process for orders that are 'ReadyForDispatch', assigning them to available vehicles based on capacity, proximity (using coordinates), and delivery type prioritization.",
        tags = { "Assignment" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Assignment process completed successfully.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AssignmentSummaryResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid request or unable to assign orders (e.g., no ready orders, no available vehicles).", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorResponse.class))
            }),
            @ApiResponse(responseCode = "401", description = "Authentication information is missing or invalid.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorResponse.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/api/v1/assign-orders",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<AssignmentSummaryResponse> assignOrders(
        @Parameter(name = "AssignOrdersRequest", description = "") @Valid @RequestBody(required = false) AssignOrdersRequest assignOrdersRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"assignmentsCreated\" : 15, \"vehiclesUtilized\" : 3, \"message\" : \"Assignment process completed.\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"message\" : \"Order not found.\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"message\" : \"Order not found.\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /api/v1/assignments : Get all current vehicle assignments (Paginated)
     * Returns a paginated list showing which orders are currently assigned to which vehicles.
     *
     * @param limit Maximum number of vehicle assignments to return per page. (optional, default to 20)
     * @param offset Number of vehicle assignments to skip for pagination. (optional, default to 0)
     * @param vehicleStatus Filter assignments by vehicle status (e.g., &#39;In Transit&#39;). (optional)
     * @param registrationNumber Filter assignments for a specific vehicle. (optional)
     * @return Successfully retrieved all assignments. (status code 200)
     *         or Invalid query parameters. (status code 400)
     *         or Authentication information is missing or invalid. (status code 401)
     */
    @Operation(
        operationId = "getAllAssignments",
        summary = "Get all current vehicle assignments (Paginated)",
        description = "Returns a paginated list showing which orders are currently assigned to which vehicles.",
        tags = { "Assignment" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Successfully retrieved all assignments.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = PaginatedVehicleAssignmentResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid query parameters.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorResponse.class))
            }),
            @ApiResponse(responseCode = "401", description = "Authentication information is missing or invalid.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorResponse.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/api/v1/assignments",
        produces = { "application/json" }
    )
    
    default ResponseEntity<PaginatedVehicleAssignmentResponse> getAllAssignments(
        @Min(1) @Parameter(name = "limit", description = "Maximum number of vehicle assignments to return per page.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "limit", required = false, defaultValue = "20") Integer limit,
        @Min(0) @Parameter(name = "offset", description = "Number of vehicle assignments to skip for pagination.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "offset", required = false, defaultValue = "0") Integer offset,
        @Parameter(name = "vehicleStatus", description = "Filter assignments by vehicle status (e.g., 'In Transit').", in = ParameterIn.QUERY) @Valid @RequestParam(value = "vehicleStatus", required = false) VehicleStatus vehicleStatus,
        @Parameter(name = "registrationNumber", description = "Filter assignments for a specific vehicle.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "registrationNumber", required = false) String registrationNumber
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"metadata\" : { \"totalItems\" : 153, \"offset\" : 40, \"limit\" : 20 }, \"data\" : [ { \"vehicleIdentifier\" : { \"registrationNumber\" : \"TN38AB1234\", \"vehicleType\" : \"Van\" }, \"assignedOrders\" : [ { \"customerResponse\" : { \"phoneNumber\" : \"+919876543210\", \"address\" : { \"city\" : \"Coimbatore\", \"street\" : \"15, Race Course Road\", \"pinCode\" : \"641018\", \"latitude\" : 11.0168, \"state\" : \"Tamil Nadu\", \"longitude\" : 76.9558 }, \"name\" : \"Ravi Kumar\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" }, \"internalProcessingStatus\" : \"Processing\", \"deliveryType\" : 0, \"parcelDetails\" : { \"volume\" : 0.00915, \"weight\" : 4.5, \"dimensions\" : { \"length\" : 30.5, \"width\" : 20.0, \"height\" : 15.0 } }, \"sourceLocation\" : { \"city\" : \"Coimbatore\", \"street\" : \"15, Race Course Road\", \"pinCode\" : \"641018\", \"latitude\" : 11.0168, \"state\" : \"Tamil Nadu\", \"longitude\" : 76.9558 }, \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"assignedVehicleId\" : \"TN38AB1234\", \"deliveryDate\" : \"2025-05-04T15:30:00Z\", \"orderDate\" : \"2025-05-04T11:00:00Z\", \"status\" : \"Pending\" }, { \"customerResponse\" : { \"phoneNumber\" : \"+919876543210\", \"address\" : { \"city\" : \"Coimbatore\", \"street\" : \"15, Race Course Road\", \"pinCode\" : \"641018\", \"latitude\" : 11.0168, \"state\" : \"Tamil Nadu\", \"longitude\" : 76.9558 }, \"name\" : \"Ravi Kumar\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" }, \"internalProcessingStatus\" : \"Processing\", \"deliveryType\" : 0, \"parcelDetails\" : { \"volume\" : 0.00915, \"weight\" : 4.5, \"dimensions\" : { \"length\" : 30.5, \"width\" : 20.0, \"height\" : 15.0 } }, \"sourceLocation\" : { \"city\" : \"Coimbatore\", \"street\" : \"15, Race Course Road\", \"pinCode\" : \"641018\", \"latitude\" : 11.0168, \"state\" : \"Tamil Nadu\", \"longitude\" : 76.9558 }, \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"assignedVehicleId\" : \"TN38AB1234\", \"deliveryDate\" : \"2025-05-04T15:30:00Z\", \"orderDate\" : \"2025-05-04T11:00:00Z\", \"status\" : \"Pending\" } ] }, { \"vehicleIdentifier\" : { \"registrationNumber\" : \"TN38AB1234\", \"vehicleType\" : \"Van\" }, \"assignedOrders\" : [ { \"customerResponse\" : { \"phoneNumber\" : \"+919876543210\", \"address\" : { \"city\" : \"Coimbatore\", \"street\" : \"15, Race Course Road\", \"pinCode\" : \"641018\", \"latitude\" : 11.0168, \"state\" : \"Tamil Nadu\", \"longitude\" : 76.9558 }, \"name\" : \"Ravi Kumar\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" }, \"internalProcessingStatus\" : \"Processing\", \"deliveryType\" : 0, \"parcelDetails\" : { \"volume\" : 0.00915, \"weight\" : 4.5, \"dimensions\" : { \"length\" : 30.5, \"width\" : 20.0, \"height\" : 15.0 } }, \"sourceLocation\" : { \"city\" : \"Coimbatore\", \"street\" : \"15, Race Course Road\", \"pinCode\" : \"641018\", \"latitude\" : 11.0168, \"state\" : \"Tamil Nadu\", \"longitude\" : 76.9558 }, \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"assignedVehicleId\" : \"TN38AB1234\", \"deliveryDate\" : \"2025-05-04T15:30:00Z\", \"orderDate\" : \"2025-05-04T11:00:00Z\", \"status\" : \"Pending\" }, { \"customerResponse\" : { \"phoneNumber\" : \"+919876543210\", \"address\" : { \"city\" : \"Coimbatore\", \"street\" : \"15, Race Course Road\", \"pinCode\" : \"641018\", \"latitude\" : 11.0168, \"state\" : \"Tamil Nadu\", \"longitude\" : 76.9558 }, \"name\" : \"Ravi Kumar\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" }, \"internalProcessingStatus\" : \"Processing\", \"deliveryType\" : 0, \"parcelDetails\" : { \"volume\" : 0.00915, \"weight\" : 4.5, \"dimensions\" : { \"length\" : 30.5, \"width\" : 20.0, \"height\" : 15.0 } }, \"sourceLocation\" : { \"city\" : \"Coimbatore\", \"street\" : \"15, Race Course Road\", \"pinCode\" : \"641018\", \"latitude\" : 11.0168, \"state\" : \"Tamil Nadu\", \"longitude\" : 76.9558 }, \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"assignedVehicleId\" : \"TN38AB1234\", \"deliveryDate\" : \"2025-05-04T15:30:00Z\", \"orderDate\" : \"2025-05-04T11:00:00Z\", \"status\" : \"Pending\" } ] } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"message\" : \"Order not found.\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"message\" : \"Order not found.\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /api/v1/vehicles/{registrationNumber}/assignments : Get assignments for a specific vehicle (Paginated Orders)
     * Returns the list of orders currently assigned to the specified vehicle, paginated.
     *
     * @param registrationNumber Registration number of the vehicle. (required)
     * @param limit Maximum number of assigned orders to return. (optional, default to 20)
     * @param offset Number of assigned orders to skip. (optional, default to 0)
     * @return Successfully retrieved the vehicle&#39;s assignments. (status code 200)
     *         or Authentication information is missing or invalid. (status code 401)
     *         or The specified resource was not found. (status code 404)
     */
    @Operation(
        operationId = "getAssignmentsByVehicle",
        summary = "Get assignments for a specific vehicle (Paginated Orders)",
        description = "Returns the list of orders currently assigned to the specified vehicle, paginated.",
        tags = { "Assignment" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Successfully retrieved the vehicle's assignments.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = PaginatedOrderResponse.class))
            }),
            @ApiResponse(responseCode = "401", description = "Authentication information is missing or invalid.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorResponse.class))
            }),
            @ApiResponse(responseCode = "404", description = "The specified resource was not found.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorResponse.class))
            })
        },
        security = {
            @SecurityRequirement(name = "bearerAuth")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/api/v1/vehicles/{registrationNumber}/assignments",
        produces = { "application/json" }
    )
    
    default ResponseEntity<PaginatedOrderResponse> getAssignmentsByVehicle(
        @Parameter(name = "registrationNumber", description = "Registration number of the vehicle.", required = true, in = ParameterIn.PATH) @PathVariable("registrationNumber") String registrationNumber,
        @Min(1) @Parameter(name = "limit", description = "Maximum number of assigned orders to return.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "limit", required = false, defaultValue = "20") Integer limit,
        @Min(0) @Parameter(name = "offset", description = "Number of assigned orders to skip.", in = ParameterIn.QUERY) @Valid @RequestParam(value = "offset", required = false, defaultValue = "0") Integer offset
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"metadata\" : { \"totalItems\" : 153, \"offset\" : 40, \"limit\" : 20 }, \"data\" : [ { \"customerResponse\" : { \"phoneNumber\" : \"+919876543210\", \"address\" : { \"city\" : \"Coimbatore\", \"street\" : \"15, Race Course Road\", \"pinCode\" : \"641018\", \"latitude\" : 11.0168, \"state\" : \"Tamil Nadu\", \"longitude\" : 76.9558 }, \"name\" : \"Ravi Kumar\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" }, \"internalProcessingStatus\" : \"Processing\", \"deliveryType\" : 0, \"parcelDetails\" : { \"volume\" : 0.00915, \"weight\" : 4.5, \"dimensions\" : { \"length\" : 30.5, \"width\" : 20.0, \"height\" : 15.0 } }, \"sourceLocation\" : { \"city\" : \"Coimbatore\", \"street\" : \"15, Race Course Road\", \"pinCode\" : \"641018\", \"latitude\" : 11.0168, \"state\" : \"Tamil Nadu\", \"longitude\" : 76.9558 }, \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"assignedVehicleId\" : \"TN38AB1234\", \"deliveryDate\" : \"2025-05-04T15:30:00Z\", \"orderDate\" : \"2025-05-04T11:00:00Z\", \"status\" : \"Pending\" }, { \"customerResponse\" : { \"phoneNumber\" : \"+919876543210\", \"address\" : { \"city\" : \"Coimbatore\", \"street\" : \"15, Race Course Road\", \"pinCode\" : \"641018\", \"latitude\" : 11.0168, \"state\" : \"Tamil Nadu\", \"longitude\" : 76.9558 }, \"name\" : \"Ravi Kumar\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\" }, \"internalProcessingStatus\" : \"Processing\", \"deliveryType\" : 0, \"parcelDetails\" : { \"volume\" : 0.00915, \"weight\" : 4.5, \"dimensions\" : { \"length\" : 30.5, \"width\" : 20.0, \"height\" : 15.0 } }, \"sourceLocation\" : { \"city\" : \"Coimbatore\", \"street\" : \"15, Race Course Road\", \"pinCode\" : \"641018\", \"latitude\" : 11.0168, \"state\" : \"Tamil Nadu\", \"longitude\" : 76.9558 }, \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"assignedVehicleId\" : \"TN38AB1234\", \"deliveryDate\" : \"2025-05-04T15:30:00Z\", \"orderDate\" : \"2025-05-04T11:00:00Z\", \"status\" : \"Pending\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"message\" : \"Order not found.\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"message\" : \"Order not found.\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
